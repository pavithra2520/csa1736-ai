def is_safe(country, color, coloring, adj_list):
    for neighbor in adj_list[country]:
        if neighbor in coloring and coloring[neighbor] == color:
            return False
    return True

def map_coloring(country, colors, coloring, adj_list):
    if country not in coloring:
        for color in colors:
            if is_safe(country, color, coloring, adj_list):
                coloring[country] = color
                if map_coloring(country + 1, colors, coloring, adj_list):
                    return True
                coloring.pop(country)
        return False
    else:
        return map_coloring(country + 1, colors, coloring, adj_list)

# Data for the map and adjacency list
countries = ['A', 'B', 'C', 'D']
colors = ['Red', 'Green', 'Blue']
adj_list = {'A': ['B', 'C'], 'B': ['A', 'C', 'D'], 'C': ['A', 'B', 'D'], 'D': ['B', 'C']}

# Initialize coloring dictionary
coloring = {}

# Solve the Map Colouring problem
if map_coloring('A', colors, coloring, adj_list):
    print("Map Coloring Solution:")
    for country, color in coloring.items():
        print(f"Country {country} is colored {color}")
else:
    print("No solution found.")
